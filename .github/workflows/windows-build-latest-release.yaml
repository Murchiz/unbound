name: Build Unbound Latest Release on Windows

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Get latest release tag
        id: latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.repos.getLatestRelease({
              owner: 'NLnetLabs',
              repo: 'unbound',
            });
            const tag_name = response.data.tag_name;
            core.setOutput('tag_name', tag_name);
      - name: Checkout repository at latest release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.latest_release.outputs.tag_name }}
          submodules: false
          persist-credentials: false
      - name: Set up build environment
        shell: bash
        run: |
          export unboundpath=`pwd`
          echo "unboundpath=${unboundpath}"
          cd ..
          export prepath=`pwd`
          echo "prepath=${prepath}"
          echo "Installing winflexbison3 via Chocolatey"
          choco install winflexbison3 -y
          echo 'LEX="win_flex"'
          export LEX="win_flex"
          echo 'YACC="win_bison -y"'
          export YACC="win_bison -y"
      - name: Build OpenSSL
        shell: bash
        run: |
          cd ${prepath}
          mkdir openssl
          curl -L -k -s -S -o openssl-3.2.0.tar.gz https://www.openssl.org/source/openssl-3.2.0.tar.gz
          tar xzf openssl-3.2.0.tar.gz
          cd openssl-3.2.0
          C:/msys64/usr/bin/perl ./Configure no-shared no-asm -DOPENSSL_NO_CAPIENG mingw64 --prefix="${prepath}/openssl" PERL="C:/msys64/usr/bin/perl"
          make build_libs
          mv Makefile Makefile.orig
          sed -e 's?^INSTALLTOP=.*$?INSTALLTOP='"${prepath}"'/openssl?' < Makefile.orig > Makefile
          make install_dev
      - name: Build Expat
        shell: bash
        env:
          LIBEXPAT_FNAME: expat-2.7.0
          LIBEXPAT_VERSION_DIR: R_2_7_0
        run: |
          cd ${prepath}
          mkdir expat
          curl -L -k -s -S -o ${LIBEXPAT_FNAME}.tar.gz https://github.com/libexpat/libexpat/releases/download/${LIBEXPAT_VERSION_DIR}/${LIBEXPAT_FNAME}.tar.gz
          tar xzf ${LIBEXPAT_FNAME}.tar.gz
          cd ${LIBEXPAT_FNAME}
          ./configure SHELL=/usr/bin/bash CONFIG_SHELL=/usr/bin/bash --prefix="${prepath}/expat" --exec-prefix="${prepath}/expat" --bindir="${prepath}/expat/bin" --includedir="${prepath}/expat/include" --mandir="${prepath}/expat/man" --libdir="${prepath}/expat/lib"
          # Fix Makefiles for Windows compatibility
          for f in Makefile lib/Makefile doc/Makefile examples/Makefile tests/Makefile xmlwf/Makefile; do
            mv $f $f.orig
            sed -e 's/SHELL/SHELLZZ/g' < $f.orig > $f
          done
          make
          make install
      - name: Build Unbound
        shell: bash
        run: |
          cd ${unboundpath}
          ./configure --enable-debug --enable-static-exe --disable-flto --with-ssl="${prepath}/openssl" --with-libexpat="${prepath}/expat" --disable-shared
          make
          make test